{"remainingRequest":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\babel-loader\\lib\\index.js!D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\src\\components\\Him\\api\\userFriend.js","dependencies":[{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\src\\components\\Him\\api\\userFriend.js","mtime":1560643907000},{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1578480813089},{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { create } from \"./himAxios\"; //\n// 朋友列表\n\nexport function userFriendLists(apiBaseUrl, query) {\n  return create(apiBaseUrl)({\n    url: \"/api/user/friend/lists\",\n    method: \"get\",\n    params: query\n  });\n} // 朋友列表\n\nexport function userFriendDelete(apiBaseUrl, data) {\n  return create(apiBaseUrl)({\n    url: \"/api/user/friend/delete\",\n    method: \"post\",\n    data: data\n  });\n}",{"version":3,"sources":["D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\src\\components\\Him\\api\\userFriend.js"],"names":["create","userFriendLists","apiBaseUrl","query","url","method","params","userFriendDelete","data"],"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB,C,CAEA;AAEA;;AACA,OAAO,SAASC,eAAT,CAAyBC,UAAzB,EAAqCC,KAArC,EAA4C;AAC/C,SAAOH,OAAOE,UAAP,EAAmB;AACtBE,SAAK,wBADiB;AAEtBC,YAAQ,KAFc;AAGtBC,YAAQH;AAHc,GAAnB,CAAP;AAKH,C,CAED;;AACA,OAAO,SAASI,gBAAT,CAA0BL,UAA1B,EAAsCM,IAAtC,EAA4C;AAC/C,SAAOR,OAAOE,UAAP,EAAmB;AACtBE,SAAK,yBADiB;AAEtBC,YAAQ,MAFc;AAGtBG,UAAMA;AAHgB,GAAnB,CAAP;AAKH","sourcesContent":["import { create } from \"./himAxios\";\n\n//\n\n// 朋友列表\nexport function userFriendLists(apiBaseUrl, query) {\n    return create(apiBaseUrl)({\n        url: \"/api/user/friend/lists\",\n        method: \"get\",\n        params: query\n    });\n}\n\n// 朋友列表\nexport function userFriendDelete(apiBaseUrl, data) {\n    return create(apiBaseUrl)({\n        url: \"/api/user/friend/delete\",\n        method: \"post\",\n        data: data\n    });\n}\n"]}]}