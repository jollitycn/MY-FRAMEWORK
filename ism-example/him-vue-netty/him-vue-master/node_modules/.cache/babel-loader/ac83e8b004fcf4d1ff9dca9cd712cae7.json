{"remainingRequest":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\babel-loader\\lib\\index.js!D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\src\\components\\Him\\api\\himAxios.js","dependencies":[{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\src\\components\\Him\\api\\himAxios.js","mtime":1560643907000},{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1578480813089},{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\"; // 获取用户信息\n\nexport function create(apiBaseUrl) {\n  // 创建axios实例\n  var service = axios.create({\n    baseURL: apiBaseUrl,\n    // api的base_url\n    timeout: 5000,\n    // 请求超时时间\n    withCredentials: true\n  }); // request拦截器\n\n  service.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    Promise.reject(error);\n  }); // respone拦截器\n\n  service.interceptors.response.use(function (response) {\n    var data = response.data;\n\n    if (data.code) {\n      if (data.code === 1) {// 重新登录\n      }\n    }\n\n    return data;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n  return service;\n}",{"version":3,"sources":["D:\\ProjectData\\ism\\ism-example\\him-vue-netty\\him-vue-master\\src\\components\\Him\\api\\himAxios.js"],"names":["axios","create","apiBaseUrl","service","baseURL","timeout","withCredentials","interceptors","request","use","config","Promise","reject","error","response","data","code"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,SAASC,MAAT,CAAgBC,UAAhB,EAA4B;AAC/B;AACA,MAAMC,UAAUH,MAAMC,MAAN,CAAa;AACzBG,aAASF,UADgB;AACJ;AACrBG,aAAS,IAFgB;AAEV;AACfC,qBAAiB;AAHQ,GAAb,CAAhB,CAF+B,CAO/B;;AACAH,UAAQI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,kBAAU;AACN;AACA,WAAOC,MAAP;AACH,GAJL,EAKI,iBAAS;AACL;AACAC,YAAQC,MAAR,CAAeC,KAAf;AACH,GARL,EAR+B,CAmB/B;;AACAV,UAAQI,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CACI,oBAAY;AACR,QAAMM,OAAOD,SAASC,IAAtB;;AACA,QAAIA,KAAKC,IAAT,EAAe;AACX,UAAID,KAAKC,IAAL,KAAc,CAAlB,EAAqB,CACjB;AACH;AACJ;;AACD,WAAOD,IAAP;AACH,GATL,EAUI,iBAAS;AACL,WAAOJ,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACH,GAZL;AAcA,SAAOV,OAAP;AACH","sourcesContent":["import axios from \"axios\";\n\n// 获取用户信息\nexport function create(apiBaseUrl) {\n    // 创建axios实例\n    const service = axios.create({\n        baseURL: apiBaseUrl, // api的base_url\n        timeout: 5000, // 请求超时时间\n        withCredentials: true\n    });\n    // request拦截器\n    service.interceptors.request.use(\n        config => {\n            // Do something before request is sent\n            return config;\n        },\n        error => {\n            // Do something with request error\n            Promise.reject(error);\n        }\n    );\n\n    // respone拦截器\n    service.interceptors.response.use(\n        response => {\n            const data = response.data;\n            if (data.code) {\n                if (data.code === 1) {\n                    // 重新登录\n                }\n            }\n            return data;\n        },\n        error => {\n            return Promise.reject(error);\n        }\n    );\n    return service;\n}\n"]}]}