{"remainingRequest":"D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\node_modules\\babel-loader\\lib\\index.js!D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\src\\views\\test\\canvas\\poster.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\src\\views\\test\\canvas\\poster.js","mtime":1560643907000},{"path":"D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1578480813089},{"path":"D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nexport default {\n  name: \"poster\",\n  data: function data() {\n    return {\n      ctx: null,\n      posterImgUrl: null\n    };\n  },\n  components: {},\n  methods: {\n    canIUseCanvas: function canIUseCanvas(canvas) {\n      return !!canvas.getContext(\"2d\");\n    },\n    // 画背景\n    drawBackground: function drawBackground() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        console.log(_this.ctx);\n        var background = new Image();\n        background.src = require(\"../../../assets/image/poster-bg.png\");\n\n        background.onload = function () {\n          _this.ctx.drawImage(background, 0, 0, _this.ctx.canvas.width, _this.ctx.canvas.height);\n\n          resolve();\n        };\n      });\n    },\n    // 画文字\n    drawText: function drawText() {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.ctx.fillStyle = \"green\"; //设置填充的背景颜色\n\n        _this2.ctx.fillRect(0, 0, 800, 300); //绘制 800*300 像素的已填充矩形：\n\n\n        _this2.ctx.fillStyle = \"#fff\";\n        _this2.ctx.strokeStyle = \"#fff\"; //设置笔触的颜色\n\n        _this2.ctx.font = \"bold 40px '字体','字体','微软雅黑','宋体'\"; //设置字体\n\n        _this2.ctx.textBaseline = \"hanging\"; //在绘制文本时使用的当前文本基线\n\n        _this2.ctx.fillText(\"长按二维码\", 10, 40); //设置文本内容\n\n\n        resolve();\n      });\n    },\n    // 画头像\n    drawAvatar: function drawAvatar() {\n      return new Promise(function (resolve) {\n        resolve();\n      });\n    },\n    // 画二维码\n    drawQrCode: function drawQrCode() {\n      return new Promise(function (resolve) {\n        resolve();\n      });\n    },\n    drawAll: function drawAll() {\n      return Promise.all([this.drawBackground(), this.drawText(), this.drawAvatar(), this.drawQrCode()]);\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    var canvas = this.$refs.posterCanvas;\n\n    if (this.canIUseCanvas(canvas)) {\n      // canvas.width = this.posterW;\n      // canvas.height = this.posterH;\n      this.ctx = canvas.getContext(\"2d\");\n      this.drawAll().then(function () {\n        _this3.posterImgUrl = _this3.ctx.canvas.toDataURL(\"image/png\");\n      });\n    }\n  },\n  created: function created() {}\n};",{"version":3,"sources":["D:\\ProjectData\\github\\him-vue-netty\\him-vue-master\\src\\views\\test\\canvas\\poster.js"],"names":["name","data","ctx","posterImgUrl","components","methods","canIUseCanvas","canvas","getContext","drawBackground","Promise","console","log","background","Image","src","require","onload","drawImage","width","height","resolve","drawText","fillStyle","fillRect","strokeStyle","font","textBaseline","fillText","drawAvatar","drawQrCode","drawAll","all","mounted","$refs","posterCanvas","then","toDataURL","created"],"mappings":";AAAA,eAAe;AACXA,QAAM,QADK;AAEXC,MAFW,kBAEJ;AACH,WAAO;AACHC,WAAK,IADF;AAEHC,oBAAc;AAFX,KAAP;AAIH,GAPU;AAQXC,cAAY,EARD;AASXC,WAAS;AACLC,iBADK,yBACSC,MADT,EACiB;AAClB,aAAO,CAAC,CAACA,OAAOC,UAAP,CAAkB,IAAlB,CAAT;AACH,KAHI;AAIL;AACAC,kBALK,4BAKY;AAAA;;AACb,aAAO,IAAIC,OAAJ,CAAY,mBAAW;AAC1BC,gBAAQC,GAAR,CAAY,MAAKV,GAAjB;AACA,YAAIW,aAAa,IAAIC,KAAJ,EAAjB;AACAD,mBAAWE,GAAX,GAAiBC,QAAQ,qCAAR,CAAjB;;AACAH,mBAAWI,MAAX,GAAoB,YAAM;AACtB,gBAAKf,GAAL,CAASgB,SAAT,CACIL,UADJ,EAEI,CAFJ,EAGI,CAHJ,EAII,MAAKX,GAAL,CAASK,MAAT,CAAgBY,KAJpB,EAKI,MAAKjB,GAAL,CAASK,MAAT,CAAgBa,MALpB;;AAOAC;AACH,SATD;AAUH,OAdM,CAAP;AAeH,KArBI;AAsBL;AACAC,YAvBK,sBAuBM;AAAA;;AACP,aAAO,IAAIZ,OAAJ,CAAY,mBAAW;AAC1B,eAAKR,GAAL,CAASqB,SAAT,GAAqB,OAArB,CAD0B,CACI;;AAC9B,eAAKrB,GAAL,CAASsB,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,GAAxB,EAA6B,GAA7B,EAF0B,CAES;;;AACnC,eAAKtB,GAAL,CAASqB,SAAT,GAAqB,MAArB;AACA,eAAKrB,GAAL,CAASuB,WAAT,GAAuB,MAAvB,CAJ0B,CAIK;;AAC/B,eAAKvB,GAAL,CAASwB,IAAT,GAAgB,iCAAhB,CAL0B,CAKyB;;AACnD,eAAKxB,GAAL,CAASyB,YAAT,GAAwB,SAAxB,CAN0B,CAMS;;AACnC,eAAKzB,GAAL,CAAS0B,QAAT,CAAkB,OAAlB,EAA2B,EAA3B,EAA+B,EAA/B,EAP0B,CAOU;;;AACpCP;AACH,OATM,CAAP;AAUH,KAlCI;AAmCL;AACAQ,cApCK,wBAoCQ;AACT,aAAO,IAAInB,OAAJ,CAAY,mBAAW;AAC1BW;AACH,OAFM,CAAP;AAGH,KAxCI;AAyCL;AACAS,cA1CK,wBA0CQ;AACT,aAAO,IAAIpB,OAAJ,CAAY,mBAAW;AAC1BW;AACH,OAFM,CAAP;AAGH,KA9CI;AA+CLU,WA/CK,qBA+CK;AACN,aAAOrB,QAAQsB,GAAR,CAAY,CACf,KAAKvB,cAAL,EADe,EAEf,KAAKa,QAAL,EAFe,EAGf,KAAKO,UAAL,EAHe,EAIf,KAAKC,UAAL,EAJe,CAAZ,CAAP;AAMH;AAtDI,GATE;AAiEXG,SAjEW,qBAiED;AAAA;;AACN,QAAM1B,SAAS,KAAK2B,KAAL,CAAWC,YAA1B;;AACA,QAAI,KAAK7B,aAAL,CAAmBC,MAAnB,CAAJ,EAAgC;AAC5B;AACA;AACA,WAAKL,GAAL,GAAWK,OAAOC,UAAP,CAAkB,IAAlB,CAAX;AACA,WAAKuB,OAAL,GAAeK,IAAf,CAAoB,YAAM;AACtB,eAAKjC,YAAL,GAAoB,OAAKD,GAAL,CAASK,MAAT,CAAgB8B,SAAhB,CAA0B,WAA1B,CAApB;AACH,OAFD;AAGH;AACJ,GA3EU;AA4EXC,SA5EW,qBA4ED,CAAE;AA5ED,CAAf","sourcesContent":["export default {\n    name: \"poster\",\n    data() {\n        return {\n            ctx: null,\n            posterImgUrl: null\n        };\n    },\n    components: {},\n    methods: {\n        canIUseCanvas(canvas) {\n            return !!canvas.getContext(\"2d\");\n        },\n        // 画背景\n        drawBackground() {\n            return new Promise(resolve => {\n                console.log(this.ctx);\n                let background = new Image();\n                background.src = require(\"../../../assets/image/poster-bg.png\");\n                background.onload = () => {\n                    this.ctx.drawImage(\n                        background,\n                        0,\n                        0,\n                        this.ctx.canvas.width,\n                        this.ctx.canvas.height\n                    );\n                    resolve();\n                };\n            });\n        },\n        // 画文字\n        drawText() {\n            return new Promise(resolve => {\n                this.ctx.fillStyle = \"green\"; //设置填充的背景颜色\n                this.ctx.fillRect(0, 0, 800, 300); //绘制 800*300 像素的已填充矩形：\n                this.ctx.fillStyle = \"#fff\";\n                this.ctx.strokeStyle = \"#fff\"; //设置笔触的颜色\n                this.ctx.font = \"bold 40px '字体','字体','微软雅黑','宋体'\"; //设置字体\n                this.ctx.textBaseline = \"hanging\"; //在绘制文本时使用的当前文本基线\n                this.ctx.fillText(\"长按二维码\", 10, 40); //设置文本内容\n                resolve();\n            });\n        },\n        // 画头像\n        drawAvatar() {\n            return new Promise(resolve => {\n                resolve();\n            });\n        },\n        // 画二维码\n        drawQrCode() {\n            return new Promise(resolve => {\n                resolve();\n            });\n        },\n        drawAll() {\n            return Promise.all([\n                this.drawBackground(),\n                this.drawText(),\n                this.drawAvatar(),\n                this.drawQrCode()\n            ]);\n        }\n    },\n    mounted() {\n        const canvas = this.$refs.posterCanvas;\n        if (this.canIUseCanvas(canvas)) {\n            // canvas.width = this.posterW;\n            // canvas.height = this.posterH;\n            this.ctx = canvas.getContext(\"2d\");\n            this.drawAll().then(() => {\n                this.posterImgUrl = this.ctx.canvas.toDataURL(\"image/png\");\n            });\n        }\n    },\n    created() {}\n};\n"]}]}